# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation  # noqa: E501

    OpenAPI spec version: 1001.0.0-SNAPSHOT-0daa9a9e2722e510da52cb72ee41a43128c97f42
    Contact: ecosystem@atlassian.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BulkIssuePropertyUpdateRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'expression': 'str',
        'filter': 'AllOfBulkIssuePropertyUpdateRequestFilter',
        'value': 'object'
    }

    attribute_map = {
        'expression': 'expression',
        'filter': 'filter',
        'value': 'value'
    }

    def __init__(self, expression=None, filter=None, value=None):  # noqa: E501
        """BulkIssuePropertyUpdateRequest - a model defined in Swagger"""  # noqa: E501
        self._expression = None
        self._filter = None
        self._value = None
        self.discriminator = None
        if expression is not None:
            self.expression = expression
        if filter is not None:
            self.filter = filter
        if value is not None:
            self.value = value

    @property
    def expression(self):
        """Gets the expression of this BulkIssuePropertyUpdateRequest.  # noqa: E501

        EXPERIMENTAL. The Jira expression to calculate the value of the property. The value of the expression must be an object that can be converted to JSON, such as a number, boolean, string, list, or map. The context variables available to the expression are `issue` and `user`. Issues for which the expression returns a value whose JSON representation is longer than 32768 characters are ignored.  # noqa: E501

        :return: The expression of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this BulkIssuePropertyUpdateRequest.

        EXPERIMENTAL. The Jira expression to calculate the value of the property. The value of the expression must be an object that can be converted to JSON, such as a number, boolean, string, list, or map. The context variables available to the expression are `issue` and `user`. Issues for which the expression returns a value whose JSON representation is longer than 32768 characters are ignored.  # noqa: E501

        :param expression: The expression of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :type: str
        """

        self._expression = expression

    @property
    def filter(self):
        """Gets the filter of this BulkIssuePropertyUpdateRequest.  # noqa: E501

        The bulk operation filter.  # noqa: E501

        :return: The filter of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :rtype: AllOfBulkIssuePropertyUpdateRequestFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this BulkIssuePropertyUpdateRequest.

        The bulk operation filter.  # noqa: E501

        :param filter: The filter of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :type: AllOfBulkIssuePropertyUpdateRequestFilter
        """

        self._filter = filter

    @property
    def value(self):
        """Gets the value of this BulkIssuePropertyUpdateRequest.  # noqa: E501

        The value of the property. The value must be a [valid](https://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  # noqa: E501

        :return: The value of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BulkIssuePropertyUpdateRequest.

        The value of the property. The value must be a [valid](https://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  # noqa: E501

        :param value: The value of this BulkIssuePropertyUpdateRequest.  # noqa: E501
        :type: object
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BulkIssuePropertyUpdateRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkIssuePropertyUpdateRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
