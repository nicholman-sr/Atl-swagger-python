# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation  # noqa: E501

    OpenAPI spec version: 1001.0.0-SNAPSHOT-0daa9a9e2722e510da52cb72ee41a43128c97f42
    Contact: ecosystem@atlassian.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FailedWebhook(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'body': 'str',
        'failure_time': 'int',
        'id': 'str',
        'url': 'str'
    }

    attribute_map = {
        'body': 'body',
        'failure_time': 'failureTime',
        'id': 'id',
        'url': 'url'
    }

    def __init__(self, body=None, failure_time=None, id=None, url=None):  # noqa: E501
        """FailedWebhook - a model defined in Swagger"""  # noqa: E501
        self._body = None
        self._failure_time = None
        self._id = None
        self._url = None
        self.discriminator = None
        if body is not None:
            self.body = body
        self.failure_time = failure_time
        self.id = id
        self.url = url

    @property
    def body(self):
        """Gets the body of this FailedWebhook.  # noqa: E501

        The webhook body.  # noqa: E501

        :return: The body of this FailedWebhook.  # noqa: E501
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this FailedWebhook.

        The webhook body.  # noqa: E501

        :param body: The body of this FailedWebhook.  # noqa: E501
        :type: str
        """

        self._body = body

    @property
    def failure_time(self):
        """Gets the failure_time of this FailedWebhook.  # noqa: E501

        The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).  # noqa: E501

        :return: The failure_time of this FailedWebhook.  # noqa: E501
        :rtype: int
        """
        return self._failure_time

    @failure_time.setter
    def failure_time(self, failure_time):
        """Sets the failure_time of this FailedWebhook.

        The time the webhook was added to the list of failed webhooks (that is, the time of the last failed retry).  # noqa: E501

        :param failure_time: The failure_time of this FailedWebhook.  # noqa: E501
        :type: int
        """
        if failure_time is None:
            raise ValueError("Invalid value for `failure_time`, must not be `None`")  # noqa: E501

        self._failure_time = failure_time

    @property
    def id(self):
        """Gets the id of this FailedWebhook.  # noqa: E501

        The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.  # noqa: E501

        :return: The id of this FailedWebhook.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FailedWebhook.

        The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier` header with the webhook.  # noqa: E501

        :param id: The id of this FailedWebhook.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def url(self):
        """Gets the url of this FailedWebhook.  # noqa: E501

        The original webhook destination.  # noqa: E501

        :return: The url of this FailedWebhook.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this FailedWebhook.

        The original webhook destination.  # noqa: E501

        :param url: The url of this FailedWebhook.  # noqa: E501
        :type: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FailedWebhook, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FailedWebhook):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
