# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation  # noqa: E501

    OpenAPI spec version: 1001.0.0-SNAPSHOT-0daa9a9e2722e510da52cb72ee41a43128c97f42
    Contact: ecosystem@atlassian.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SimplifiedHierarchyLevel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'above_level_id': 'int',
        'below_level_id': 'int',
        'external_uuid': 'str',
        'hierarchy_level_number': 'int',
        'id': 'int',
        'issue_type_ids': 'list[int]',
        'level': 'int',
        'name': 'str',
        'project_configuration_id': 'int'
    }

    attribute_map = {
        'above_level_id': 'aboveLevelId',
        'below_level_id': 'belowLevelId',
        'external_uuid': 'externalUuid',
        'hierarchy_level_number': 'hierarchyLevelNumber',
        'id': 'id',
        'issue_type_ids': 'issueTypeIds',
        'level': 'level',
        'name': 'name',
        'project_configuration_id': 'projectConfigurationId'
    }

    def __init__(self, above_level_id=None, below_level_id=None, external_uuid=None, hierarchy_level_number=None, id=None, issue_type_ids=None, level=None, name=None, project_configuration_id=None):  # noqa: E501
        """SimplifiedHierarchyLevel - a model defined in Swagger"""  # noqa: E501
        self._above_level_id = None
        self._below_level_id = None
        self._external_uuid = None
        self._hierarchy_level_number = None
        self._id = None
        self._issue_type_ids = None
        self._level = None
        self._name = None
        self._project_configuration_id = None
        self.discriminator = None
        if above_level_id is not None:
            self.above_level_id = above_level_id
        if below_level_id is not None:
            self.below_level_id = below_level_id
        if external_uuid is not None:
            self.external_uuid = external_uuid
        if hierarchy_level_number is not None:
            self.hierarchy_level_number = hierarchy_level_number
        if id is not None:
            self.id = id
        if issue_type_ids is not None:
            self.issue_type_ids = issue_type_ids
        if level is not None:
            self.level = level
        if name is not None:
            self.name = name
        if project_configuration_id is not None:
            self.project_configuration_id = project_configuration_id

    @property
    def above_level_id(self):
        """Gets the above_level_id of this SimplifiedHierarchyLevel.  # noqa: E501

        The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The above_level_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._above_level_id

    @above_level_id.setter
    def above_level_id(self, above_level_id):
        """Sets the above_level_id of this SimplifiedHierarchyLevel.

        The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param above_level_id: The above_level_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._above_level_id = above_level_id

    @property
    def below_level_id(self):
        """Gets the below_level_id of this SimplifiedHierarchyLevel.  # noqa: E501

        The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The below_level_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._below_level_id

    @below_level_id.setter
    def below_level_id(self, below_level_id):
        """Sets the below_level_id of this SimplifiedHierarchyLevel.

        The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param below_level_id: The below_level_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._below_level_id = below_level_id

    @property
    def external_uuid(self):
        """Gets the external_uuid of this SimplifiedHierarchyLevel.  # noqa: E501

        The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The external_uuid of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: str
        """
        return self._external_uuid

    @external_uuid.setter
    def external_uuid(self, external_uuid):
        """Sets the external_uuid of this SimplifiedHierarchyLevel.

        The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param external_uuid: The external_uuid of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: str
        """

        self._external_uuid = external_uuid

    @property
    def hierarchy_level_number(self):
        """Gets the hierarchy_level_number of this SimplifiedHierarchyLevel.  # noqa: E501


        :return: The hierarchy_level_number of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._hierarchy_level_number

    @hierarchy_level_number.setter
    def hierarchy_level_number(self, hierarchy_level_number):
        """Sets the hierarchy_level_number of this SimplifiedHierarchyLevel.


        :param hierarchy_level_number: The hierarchy_level_number of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._hierarchy_level_number = hierarchy_level_number

    @property
    def id(self):
        """Gets the id of this SimplifiedHierarchyLevel.  # noqa: E501

        The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The id of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SimplifiedHierarchyLevel.

        The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param id: The id of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def issue_type_ids(self):
        """Gets the issue_type_ids of this SimplifiedHierarchyLevel.  # noqa: E501

        The issue types available in this hierarchy level.  # noqa: E501

        :return: The issue_type_ids of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: list[int]
        """
        return self._issue_type_ids

    @issue_type_ids.setter
    def issue_type_ids(self, issue_type_ids):
        """Sets the issue_type_ids of this SimplifiedHierarchyLevel.

        The issue types available in this hierarchy level.  # noqa: E501

        :param issue_type_ids: The issue_type_ids of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: list[int]
        """

        self._issue_type_ids = issue_type_ids

    @property
    def level(self):
        """Gets the level of this SimplifiedHierarchyLevel.  # noqa: E501

        The level of this item in the hierarchy.  # noqa: E501

        :return: The level of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this SimplifiedHierarchyLevel.

        The level of this item in the hierarchy.  # noqa: E501

        :param level: The level of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._level = level

    @property
    def name(self):
        """Gets the name of this SimplifiedHierarchyLevel.  # noqa: E501

        The name of this hierarchy level.  # noqa: E501

        :return: The name of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SimplifiedHierarchyLevel.

        The name of this hierarchy level.  # noqa: E501

        :param name: The name of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def project_configuration_id(self):
        """Gets the project_configuration_id of this SimplifiedHierarchyLevel.  # noqa: E501

        The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :return: The project_configuration_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :rtype: int
        """
        return self._project_configuration_id

    @project_configuration_id.setter
    def project_configuration_id(self, project_configuration_id):
        """Sets the project_configuration_id of this SimplifiedHierarchyLevel.

        The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).  # noqa: E501

        :param project_configuration_id: The project_configuration_id of this SimplifiedHierarchyLevel.  # noqa: E501
        :type: int
        """

        self._project_configuration_id = project_configuration_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SimplifiedHierarchyLevel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SimplifiedHierarchyLevel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
