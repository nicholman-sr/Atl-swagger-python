# coding: utf-8

"""
    The Jira Cloud platform REST API

    Jira Cloud platform REST API documentation  # noqa: E501

    OpenAPI spec version: 1001.0.0-SNAPSHOT-0daa9a9e2722e510da52cb72ee41a43128c97f42
    Contact: ecosystem@atlassian.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ProjectPayload(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'field_layout_scheme_id': 'ProjectCreateResourceIdentifier',
        'issue_security_scheme_id': 'ProjectCreateResourceIdentifier',
        'issue_type_scheme_id': 'ProjectCreateResourceIdentifier',
        'issue_type_screen_scheme_id': 'ProjectCreateResourceIdentifier',
        'notification_scheme_id': 'ProjectCreateResourceIdentifier',
        'pcri': 'ProjectCreateResourceIdentifier',
        'permission_scheme_id': 'ProjectCreateResourceIdentifier',
        'project_type_key': 'str',
        'workflow_scheme_id': 'ProjectCreateResourceIdentifier'
    }

    attribute_map = {
        'field_layout_scheme_id': 'fieldLayoutSchemeId',
        'issue_security_scheme_id': 'issueSecuritySchemeId',
        'issue_type_scheme_id': 'issueTypeSchemeId',
        'issue_type_screen_scheme_id': 'issueTypeScreenSchemeId',
        'notification_scheme_id': 'notificationSchemeId',
        'pcri': 'pcri',
        'permission_scheme_id': 'permissionSchemeId',
        'project_type_key': 'projectTypeKey',
        'workflow_scheme_id': 'workflowSchemeId'
    }

    def __init__(self, field_layout_scheme_id=None, issue_security_scheme_id=None, issue_type_scheme_id=None, issue_type_screen_scheme_id=None, notification_scheme_id=None, pcri=None, permission_scheme_id=None, project_type_key=None, workflow_scheme_id=None):  # noqa: E501
        """ProjectPayload - a model defined in Swagger"""  # noqa: E501
        self._field_layout_scheme_id = None
        self._issue_security_scheme_id = None
        self._issue_type_scheme_id = None
        self._issue_type_screen_scheme_id = None
        self._notification_scheme_id = None
        self._pcri = None
        self._permission_scheme_id = None
        self._project_type_key = None
        self._workflow_scheme_id = None
        self.discriminator = None
        if field_layout_scheme_id is not None:
            self.field_layout_scheme_id = field_layout_scheme_id
        if issue_security_scheme_id is not None:
            self.issue_security_scheme_id = issue_security_scheme_id
        if issue_type_scheme_id is not None:
            self.issue_type_scheme_id = issue_type_scheme_id
        if issue_type_screen_scheme_id is not None:
            self.issue_type_screen_scheme_id = issue_type_screen_scheme_id
        if notification_scheme_id is not None:
            self.notification_scheme_id = notification_scheme_id
        if pcri is not None:
            self.pcri = pcri
        if permission_scheme_id is not None:
            self.permission_scheme_id = permission_scheme_id
        if project_type_key is not None:
            self.project_type_key = project_type_key
        if workflow_scheme_id is not None:
            self.workflow_scheme_id = workflow_scheme_id

    @property
    def field_layout_scheme_id(self):
        """Gets the field_layout_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The field_layout_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._field_layout_scheme_id

    @field_layout_scheme_id.setter
    def field_layout_scheme_id(self, field_layout_scheme_id):
        """Sets the field_layout_scheme_id of this ProjectPayload.


        :param field_layout_scheme_id: The field_layout_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._field_layout_scheme_id = field_layout_scheme_id

    @property
    def issue_security_scheme_id(self):
        """Gets the issue_security_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The issue_security_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._issue_security_scheme_id

    @issue_security_scheme_id.setter
    def issue_security_scheme_id(self, issue_security_scheme_id):
        """Sets the issue_security_scheme_id of this ProjectPayload.


        :param issue_security_scheme_id: The issue_security_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._issue_security_scheme_id = issue_security_scheme_id

    @property
    def issue_type_scheme_id(self):
        """Gets the issue_type_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The issue_type_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._issue_type_scheme_id

    @issue_type_scheme_id.setter
    def issue_type_scheme_id(self, issue_type_scheme_id):
        """Sets the issue_type_scheme_id of this ProjectPayload.


        :param issue_type_scheme_id: The issue_type_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._issue_type_scheme_id = issue_type_scheme_id

    @property
    def issue_type_screen_scheme_id(self):
        """Gets the issue_type_screen_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The issue_type_screen_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._issue_type_screen_scheme_id

    @issue_type_screen_scheme_id.setter
    def issue_type_screen_scheme_id(self, issue_type_screen_scheme_id):
        """Sets the issue_type_screen_scheme_id of this ProjectPayload.


        :param issue_type_screen_scheme_id: The issue_type_screen_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._issue_type_screen_scheme_id = issue_type_screen_scheme_id

    @property
    def notification_scheme_id(self):
        """Gets the notification_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The notification_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._notification_scheme_id

    @notification_scheme_id.setter
    def notification_scheme_id(self, notification_scheme_id):
        """Sets the notification_scheme_id of this ProjectPayload.


        :param notification_scheme_id: The notification_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._notification_scheme_id = notification_scheme_id

    @property
    def pcri(self):
        """Gets the pcri of this ProjectPayload.  # noqa: E501


        :return: The pcri of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._pcri

    @pcri.setter
    def pcri(self, pcri):
        """Sets the pcri of this ProjectPayload.


        :param pcri: The pcri of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._pcri = pcri

    @property
    def permission_scheme_id(self):
        """Gets the permission_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The permission_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._permission_scheme_id

    @permission_scheme_id.setter
    def permission_scheme_id(self, permission_scheme_id):
        """Sets the permission_scheme_id of this ProjectPayload.


        :param permission_scheme_id: The permission_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._permission_scheme_id = permission_scheme_id

    @property
    def project_type_key(self):
        """Gets the project_type_key of this ProjectPayload.  # noqa: E501

        The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.  # noqa: E501

        :return: The project_type_key of this ProjectPayload.  # noqa: E501
        :rtype: str
        """
        return self._project_type_key

    @project_type_key.setter
    def project_type_key(self, project_type_key):
        """Sets the project_type_key of this ProjectPayload.

        The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.  # noqa: E501

        :param project_type_key: The project_type_key of this ProjectPayload.  # noqa: E501
        :type: str
        """
        allowed_values = ["software", "business", "service_desk", "product_discovery"]  # noqa: E501
        if project_type_key not in allowed_values:
            raise ValueError(
                "Invalid value for `project_type_key` ({0}), must be one of {1}"  # noqa: E501
                .format(project_type_key, allowed_values)
            )

        self._project_type_key = project_type_key

    @property
    def workflow_scheme_id(self):
        """Gets the workflow_scheme_id of this ProjectPayload.  # noqa: E501


        :return: The workflow_scheme_id of this ProjectPayload.  # noqa: E501
        :rtype: ProjectCreateResourceIdentifier
        """
        return self._workflow_scheme_id

    @workflow_scheme_id.setter
    def workflow_scheme_id(self, workflow_scheme_id):
        """Sets the workflow_scheme_id of this ProjectPayload.


        :param workflow_scheme_id: The workflow_scheme_id of this ProjectPayload.  # noqa: E501
        :type: ProjectCreateResourceIdentifier
        """

        self._workflow_scheme_id = workflow_scheme_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProjectPayload, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProjectPayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
